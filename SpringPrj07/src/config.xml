<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- ※ 스프링이 제공하는 환경 설정 XML 파일 샘플 -->
	<!--    → 스프링이 생성하고 관리해야 할 객체들에 대한 정보 전달 -->
	
	<!-- 주 업무 -->
	<!-- CalculatorImpl 클래스의 객체 생성을 위한 정보 전달 -->
	<bean id="cal" class="com.test.spr.CalculatorImpl"></bean>
	<!-- 스프링, 스프링 컨테이너에서 class 의 설계도를 찾아
	     알아서 인스턴스를 생성해준다. 직접 쓰는거 Ⅹ -->
	
	<!-- 보조 업무 -->
	<!-- CalculatorAspect 클래스의 객체 생성을 위한 정보 전달 -->
	<bean id="aspect" class="com.test.spr.CalculatorAspect"></bean>
	
	<!-- check~!!! -->
	<!-- 스프링이 제공하는 가짜 객체(Proxy) 클래스의 객체 생성을 위한 정보 전달 -->
	<!-- 『ProxyFactoryBean』 -->
	<!-- 혜림아~ 여기서 bean 이 닫혔잖아... ㅠㅠ -->
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
	<!-- 아무 클래스나 가서 ProxyFactoryBean + Ctrl+SpaceBar 하면 import 된다 -->
	<!-- import 구문 복사해서 class="" 에 붙여넣기 하기 -->
	<!-- => proxy 생성 완료~! -->
	
	<!-- proxy 의 변수명은 접근 불가할 것 (information hiding) -->
	<!-- 대신 getter / setter 를 통해 접근 가능 -->
	<!-- ★이름이 정확히 일치 해야 한다.★ -->
	
	
		<!-- 주 업무 클래스의 인터페이스 정보 제공 -->
		<!-- → 『proxyInterfaces』 -->
		<property name="proxyInterfaces">
			<list>
			<!-- 복수형의 property 를 넘길때는 <list>엘리먼트를 사용해야 한다. -->
			<!-- 몇개가 될 지 모르기 때문에 -->
				<value>com.test.spr.Calculator</value>
				<!-- <value>com.test.spr.Calculator</value> -->
				<!-- <value>com.test.spr.Calculator</value> -->
				<!-- 다른 인터페이스가 있다면 이런식으로 추가해주면 된다. -->
			</list>
		</property>
		
		<!-- 주 업무 클래스의 객체 정보 제공 -->
		<!-- → 『target』 -->
		<property name="target" ref="cal"></property>
		<!-- 위에서 작성한 
		     <bean id="cal" class="com.test.spr.CalculatorImpl"></bean> -->
		
		<!-- 보조 업무 클래스의 객체 정보 제공 -->
		<!-- → 『interceptorNames』 -->
		<!-- 보조 업무가 하나가 아닐 수 있기 때문에 Names 복수형이다. -->
		<property name="interceptorNames">
			<list>
				<value>aspect</value>
				<!-- 위에서 작성한
				     <bean id="aspect" class="com.test.spr.CalculatorAspect"></bean> -->
			</list>
		</property>
		
	</bean>
			
</beans>
